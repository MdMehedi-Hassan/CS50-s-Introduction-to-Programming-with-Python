# outdated.py

def is_valid_month(month_str):
    months = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ]
    return month_str in months

def month_to_number(month_str):
    months = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ]
    return months.index(month_str) + 1  # Convert to 1-indexed

def is_valid_day(month, day):
    # Check if the day is valid for the given month
    if month in [1, 3, 5, 7, 8, 10, 12]:  # Months with 31 days
        return 1 <= day <= 31
    elif month in [4, 6, 9, 11]:  # Months with 30 days
        return 1 <= day <= 30
    elif month == 2:  # February, assume 28 days for simplicity
        return 1 <= day <= 28
    return False

def parse_date(date_str):
    # Handle MM/DD/YYYY format
    if '/' in date_str:
        try:
            month, day, year = map(int, date_str.strip().split('/'))
            if is_valid_day(month, day):
                return year, month, day
        except ValueError:
            return None

    # Handle "Month Day, Year" format
    elif ',' in date_str:
        try:
            month_str, day_year = date_str.split(' ', 1)
            day, year = map(int, day_year.strip().split(','))
            if is_valid_month(month_str) and is_valid_day(month_to_number(month_str), day):
                month = month_to_number(month_str)
                return year, month, day
        except ValueError:
            return None

    return None

def format_date(year, month, day):
    return f"{year}-{month:02}-{day:02}"

def main():
    while True:
        date_input = input("Enter a date (MM/DD/YYYY or Month Day, Year): ")
        parsed_date = parse_date(date_input)

        if parsed_date:
            year, month, day = parsed_date
            formatted_date = format_date(year, month, day)
            print(formatted_date)  # Output without the prefix
            break
        else:
            print("Invalid date format. Please try again.")

if __name__ == "__main__":
    main()
